// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: substrait/extensions/extensions.proto

package io.substrait.proto;

public interface SimpleExtensionDeclarationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:substrait.extensions.SimpleExtensionDeclaration)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.substrait.extensions.SimpleExtensionDeclaration.ExtensionType extension_type = 1;</code>
   * @return Whether the extensionType field is set.
   */
  boolean hasExtensionType();
  /**
   * <code>.substrait.extensions.SimpleExtensionDeclaration.ExtensionType extension_type = 1;</code>
   * @return The extensionType.
   */
  io.substrait.proto.SimpleExtensionDeclaration.ExtensionType getExtensionType();
  /**
   * <code>.substrait.extensions.SimpleExtensionDeclaration.ExtensionType extension_type = 1;</code>
   */
  io.substrait.proto.SimpleExtensionDeclaration.ExtensionTypeOrBuilder getExtensionTypeOrBuilder();

  /**
   * <code>.substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation extension_type_variation = 2;</code>
   * @return Whether the extensionTypeVariation field is set.
   */
  boolean hasExtensionTypeVariation();
  /**
   * <code>.substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation extension_type_variation = 2;</code>
   * @return The extensionTypeVariation.
   */
  io.substrait.proto.SimpleExtensionDeclaration.ExtensionTypeVariation getExtensionTypeVariation();
  /**
   * <code>.substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation extension_type_variation = 2;</code>
   */
  io.substrait.proto.SimpleExtensionDeclaration.ExtensionTypeVariationOrBuilder getExtensionTypeVariationOrBuilder();

  /**
   * <code>.substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction extension_function = 3;</code>
   * @return Whether the extensionFunction field is set.
   */
  boolean hasExtensionFunction();
  /**
   * <code>.substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction extension_function = 3;</code>
   * @return The extensionFunction.
   */
  io.substrait.proto.SimpleExtensionDeclaration.ExtensionFunction getExtensionFunction();
  /**
   * <code>.substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction extension_function = 3;</code>
   */
  io.substrait.proto.SimpleExtensionDeclaration.ExtensionFunctionOrBuilder getExtensionFunctionOrBuilder();

  public io.substrait.proto.SimpleExtensionDeclaration.MappingTypeCase getMappingTypeCase();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: relations.proto

package io.substrait;

public interface RelCommonOrBuilder extends
    // @@protoc_insertion_point(interface_extends:io.substrait.RelCommon)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.io.substrait.RelCommon.Direct direct = 1;</code>
   * @return Whether the direct field is set.
   */
  boolean hasDirect();
  /**
   * <code>.io.substrait.RelCommon.Direct direct = 1;</code>
   * @return The direct.
   */
  io.substrait.RelCommon.Direct getDirect();
  /**
   * <code>.io.substrait.RelCommon.Direct direct = 1;</code>
   */
  io.substrait.RelCommon.DirectOrBuilder getDirectOrBuilder();

  /**
   * <code>.io.substrait.RelCommon.Emit emit = 2;</code>
   * @return Whether the emit field is set.
   */
  boolean hasEmit();
  /**
   * <code>.io.substrait.RelCommon.Emit emit = 2;</code>
   * @return The emit.
   */
  io.substrait.RelCommon.Emit getEmit();
  /**
   * <code>.io.substrait.RelCommon.Emit emit = 2;</code>
   */
  io.substrait.RelCommon.EmitOrBuilder getEmitOrBuilder();

  /**
   * <code>.io.substrait.RelCommon.Hint hint = 3;</code>
   * @return Whether the hint field is set.
   */
  boolean hasHint();
  /**
   * <code>.io.substrait.RelCommon.Hint hint = 3;</code>
   * @return The hint.
   */
  io.substrait.RelCommon.Hint getHint();
  /**
   * <code>.io.substrait.RelCommon.Hint hint = 3;</code>
   */
  io.substrait.RelCommon.HintOrBuilder getHintOrBuilder();

  /**
   * <code>.io.substrait.RelCommon.RuntimeConstraint constraint = 4;</code>
   * @return Whether the constraint field is set.
   */
  boolean hasConstraint();
  /**
   * <code>.io.substrait.RelCommon.RuntimeConstraint constraint = 4;</code>
   * @return The constraint.
   */
  io.substrait.RelCommon.RuntimeConstraint getConstraint();
  /**
   * <code>.io.substrait.RelCommon.RuntimeConstraint constraint = 4;</code>
   */
  io.substrait.RelCommon.RuntimeConstraintOrBuilder getConstraintOrBuilder();

  public io.substrait.RelCommon.KindCase getKindCase();
}
